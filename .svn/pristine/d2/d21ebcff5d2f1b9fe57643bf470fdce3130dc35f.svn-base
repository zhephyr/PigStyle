Imports System.DirectoryServices
Imports System.Windows.Forms
Imports System.Data.SqlClient
Imports System.Web.Script.Serialization

Public Class plu
    Inherits System.Web.UI.Page

    Public dirGroups As List(Of String)
    Public permissionType As String
    Public totalRecs As Integer

    Dim connectionStr As String = "Server=VG-HQDBPROD; Database=tciinstore; User Id=sa; Password=2013Sql;"
    Dim connection As SqlConnection = New SqlConnection(connectionStr)

    Structure Product
        Public PLU As String
        Public Dept As String
        Public Desc1 As String
        Public Desc2 As String
        Public Ingredients As String
        Public UPC As String
        Public ServSize As String
        Public ServPer As Integer
        Public Calories As Integer
        Public CaloriesFat As Integer
        Public TotalFat As Integer
        Public PerFat As Integer
        Public SatFat As Integer
        Public PerSatFat As Integer
        Public TransFat As Integer
        Public Cholesterol As Integer
        Public PerCholesterol As Integer
        Public Sodium As Integer
        Public PerSodium As Integer
        Public Carbs As Integer
        Public PerCarbs As Integer
        Public Fiber As Integer
        Public PerFiber As Integer
        Public Sugars As Integer
        Public Protein As Integer
        Public VitA As Integer
        Public VitC As Integer
        Public Calc As Integer
        Public Iron As Integer
        Public VitD As Integer
        Public VitE As Integer
        Public Thia As Integer
        Public Ribo As Integer
        Public Niac As Integer
        Public VitB6 As Integer
        Public Folate As Integer
        Public VitB12 As Integer
        Public Biotin As Integer
        Public Phos As Integer
        Public Zinc As Integer
        Public Mag As Integer
        Public Iodine As Integer
        Public Copper As Integer
        Public Acid As Integer
    End Structure

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        dirGroups = GetGroups("LDAP://pwmdc4/DC=sso,DC=fb,DC=com", System.Environment.UserName)

        totalRecs = CountRecs(sender, e)

        If Not IsPostBack Then
            connection.Open()
            deptlist.Items.Clear()
            deptlist.Items.Add("")
            Dim sqlStr As String = "SELECT DISTINCT deptname FROM PWMv_PLUM_Departments ORDER BY deptname;"
            Dim command As SqlCommand = New SqlCommand(sqlStr, connection)
            Dim reader As SqlDataReader = command.ExecuteReader()
            While reader.Read()
                deptlist.Items.Add(reader("deptname"))
            End While
            reader.Close()
            connection.Close()
        End If

    End Sub

    Private Function GetGroups(ByVal _path As String, ByVal username As String) As List(Of String)
        Dim Groups As New List(Of String)
        Dim dirEntry As New System.DirectoryServices.DirectoryEntry(_path)
        Dim dirSearcher As New DirectorySearcher(dirEntry)
        dirSearcher.Filter = "(&(objectcategory=user)(SAMAccountName=" & username & "))"
        dirSearcher.PropertiesToLoad.Add("memberOf")
        Dim propCount As Integer
        Try
            Dim dirSearchResults As SearchResult = dirSearcher.FindOne()
            propCount = dirSearchResults.Properties("memberOf").Count
            Dim dn As String
            Dim equalsIndex As String
            Dim commaIndex As String
            For i As Integer = 0 To propCount - 1
                dn = dirSearchResults.Properties("memberOf")(i)
                equalsIndex = dn.IndexOf("=", 1)
                commaIndex = dn.IndexOf(",", 1)
                If equalsIndex = -1 Then
                    Return Nothing
                End If
                If Not Groups.Contains(dn.Substring((equalsIndex + 1), _
    (commaIndex - equalsIndex) - 1)) Then
                    Groups.Add(dn.Substring((equalsIndex + 1), (commaIndex - equalsIndex) - 1))
                End If
            Next
        Catch ex As Exception
            If ex.GetType Is GetType(System.NullReferenceException) Then
                MessageBox.Show("Selected user isn't a member of any groups at this time.", "No groups listed", MessageBoxButtons.OK, MessageBoxIcon.Error)
            Else
                MessageBox.Show(ex.Message.ToString, "Search Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
            End If
        End Try
        Return Groups
    End Function

    Protected Sub LoadPLUs(ByVal sender As Object, ByVal e As System.EventArgs)
        PLUlist.Items.Clear()

        Dim deptName As String = deptlist.SelectedItem.Text

        connection.Open()
        Dim sqlStr As String = "SELECT DISTINCT a.pluno, a.desc1, a.desc2 from PWMv_PLUM_PLUMaster AS a, PWMv_PLUM_Departments AS b "
        sqlStr = sqlStr & String.Format("WHERE b.deptname = '{0}' AND a.deptno = b.deptno ", deptName)
        If orderPLU.Checked Then
            sqlStr = sqlStr & "ORDER BY 1, 2"
        Else
            sqlStr = sqlStr & "ORDER BY 2, 1"
        End If
        Dim command As SqlCommand = New SqlCommand(sqlStr, connection)
        Dim reader As SqlDataReader = command.ExecuteReader()
        While reader.Read()
            PLUlist.Items.Add(String.Format("{0} -- {1} {2}", reader("pluno"), reader("desc1"), reader("desc2")))
        End While

        reader.Close()
        connection.Close()

        PLUrow.Visible = True
    End Sub

    Protected Function CountRecs(ByVal sender As Object, ByVal e As System.EventArgs) As Integer
        connection.Open()

        Dim sqlStr As String = "SELECT COUNT(*) FROM PWMv_PLUM_PLUMaster"
        Dim command As SqlCommand = New SqlCommand(sqlStr, connection)
        Dim recordsNo As Integer = command.ExecuteScalar()
        connection.Close()

        Return recordsNo
    End Function

    Protected Sub LoadData(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim productData As New Product

        Dim pluno As String
        If PLUtxt.Text IsNot Nothing Then
            pluno = PLUtxt.Text
        Else
            Dim pluArr() As String = Split(PLUlist.SelectedIndex.ToString(), "--")
            pluno = Trim(pluArr(0))
        End If

        connection.Open()
        Dim sqlStr As String = String.Format("SELECT * FROM PWMv_PLUM_PLUMaster AS a, PWMv_PLUM_Departments AS b WHERE a.pluno = {0} AND a.deptno = b.deptno;", pluno)
        Dim command As SqlCommand = New SqlCommand(sqlStr, connection)
        Dim pluData As SqlDataReader = command.ExecuteReader()
        While pluData.Read()
            productData.PLU = pluData("pluno")
            productData.Dept = pluData("deptname")
            productData.Desc1 = pluData("desc1")
            productData.Desc2 = pluData("desc2")
            productData.UPC = pluData("upc")
        End While
        pluData.Close()

        sqlStr = String.Format("SELECT ingrtext FROM PWMv_PLUM_IngrMaster WHERE ingrno = {0};", pluno)
        command.CommandText = sqlStr
        productData.Ingredients = command.ExecuteScalar()

        sqlStr = String.Format("SELECT * FROM PWMv_PLUM_NutriMaster WHERE nutrino = {0};", pluno)
        command.CommandText = sqlStr
        pluData = command.ExecuteReader()
        While pluData.Read()
            productData.ServSize = pluData("serveuomdesc")
            productData.ServPer = pluData("servpercon")
            productData.Calories = pluData("calories") / 10
            productData.CaloriesFat = pluData("calfrmfat") / 10
            productData.TotalFat = pluData("totalfat") / 10
            productData.PerFat = pluData("totalfatper") / 10
            productData.SatFat = pluData("saturfat") / 10
            productData.PerSatFat = pluData("saturfatper") / 10
            productData.TransFat = pluData("transfat") / 10
            productData.Cholesterol = pluData("cholesterol") / 10
            productData.PerCholesterol = pluData("cholesterolper") / 10
            productData.Sodium = pluData("sodium") / 10
            productData.PerSodium = pluData("sodiumper") / 10
            productData.Carbs = pluData("totalcarb") / 10
            productData.PerCarbs = pluData("totalcarbper") / 10
            productData.Fiber = pluData("dietfiber") / 10
            productData.PerFiber = pluData("dietfiberper") / 10
            productData.Sugars = pluData("sugars") / 10
            productData.Protein = pluData("protein") / 10
            productData.VitA = pluData("vitamina") / 10
            productData.VitC = pluData("vitaminc") / 10
            productData.Calc = pluData("calcium") / 10
            productData.Iron = pluData("iron") / 10
            productData.VitD = pluData("vitamind") / 10
            productData.VitE = pluData("vitamine") / 10
            productData.Thia = pluData("thiamine") / 10
            productData.Ribo = pluData("riboflavin") / 10
            productData.Niac = pluData("niacin") / 10
            productData.VitB6 = pluData("vitaminb6") / 10
            productData.Folate = pluData("folate") / 10
            productData.VitB12 = pluData("vitaminb12") / 10
            productData.Biotin = pluData("biotin") / 10
            productData.Phos = pluData("phosphorus") / 10
            productData.Zinc = pluData("zinc") / 10
            productData.Mag = pluData("magnesium") / 10
            productData.Iodine = pluData("iodine") / 10
            productData.Copper = pluData("copper") / 10
            productData.Acid = pluData("pantothenicacid") / 10
        End While
        pluData.Close()
        connection.Close()

        Dim serializer As New JavaScriptSerializer(New SimpleTypeResolver())
        nutritionData.Value = serializer.Serialize(productData)

        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "loadData", "loadData();", True)
    End Sub

End Class