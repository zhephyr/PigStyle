Imports System.Windows.Forms
Imports System.DirectoryServices
Imports System.Data.SqlClient
Imports System.Web.Script.Serialization

Public Class CustomerServReport
    Inherits System.Web.UI.Page

    Protected dirGroups As List(Of String)
    Protected permissionType As String

    Shared connectionStr As String = "Server=VG-UNITEDDB; Database=freshdb; User Id=freshuser; Password=Fresh2012;"
    Shared connection As SqlConnection = New SqlConnection(connectionStr)

    Structure StoreAreaOptions
        Public type As String
        Public storeList As List(Of String)
        Public areaList As List(Of String)
    End Structure

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        dirGroups = GetGroups("LDAP://pwmdc4/DC=sso,DC=fb,DC=com", HttpContext.Current.User.Identity.Name)

        Dim cs As ClientScriptManager = Page.ClientScript
        Dim csName As String = "showNoPermissionMsg"
        Dim csScript As New StringBuilder()
        csScript.Append("<script type=""text/javascript"">")
        csScript.Append("alert('Invalid Group for " & Split(HttpContext.Current.User.Identity.Name, "\")(1) & ".  For access, please contact the Help Desk at Ext. 4357.');")
        csScript.Append("window.location = '/Programs/Programs.aspx';")
        csScript.Append("</script>")

        If Not dirGroups.Contains("Corporate Users") And Not dirGroups.Contains("Store Users") Then
            If Not cs.IsClientScriptBlockRegistered(Me.[GetType](), "showNoPermissionMsg") Then
                cs.RegisterClientScriptBlock(Me.[GetType](), csName, csScript.ToString())
            End If
        End If

    End Sub

    Private Function GetGroups(ByVal _path As String, ByVal username As String) As List(Of String)
        Dim Groups As New List(Of String)
        Dim dirEntry As New System.DirectoryServices.DirectoryEntry(_path)
        Dim dirSearcher As New DirectorySearcher(dirEntry)
        Dim userID As String = Split(username, "\")(1)
        dirSearcher.Filter = "(&(objectcategory=user)(SAMAccountName=" & userID & "))"
        dirSearcher.PropertiesToLoad.Add("memberOf")
        Dim propCount As Integer
        Try
            Dim dirSearchResults As SearchResult = dirSearcher.FindOne()
            propCount = dirSearchResults.Properties("memberOf").Count
            Dim dn As String
            Dim equalsIndex As String
            Dim commaIndex As String
            For i As Integer = 0 To propCount - 1
                dn = dirSearchResults.Properties("memberOf")(i)
                equalsIndex = dn.IndexOf("=", 1)
                commaIndex = dn.IndexOf(",", 1)
                If equalsIndex = -1 Then
                    Return Nothing
                End If
                If Not Groups.Contains(dn.Substring((equalsIndex + 1), _
    (commaIndex - equalsIndex) - 1)) Then
                    Groups.Add(dn.Substring((equalsIndex + 1), (commaIndex - equalsIndex) - 1))
                End If
            Next
        Catch ex As Exception
            If ex.GetType Is GetType(System.NullReferenceException) Then
                MessageBox.Show("Selected user isn't a member of any groups at this time.", "No groups listed", MessageBoxButtons.OK, MessageBoxIcon.Error)
            Else
                MessageBox.Show(ex.Message.ToString, "Search Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
            End If
        End Try
        Return Groups
    End Function

    <System.Web.Services.WebMethod()>
    Public Shared Function GetOptions() As String

        connection.Open()
        Dim options As New StoreAreaOptions()

        If permissionType = "Store" Then
            options.type = "Store"
            Dim username As String = Split(HttpContext.Current.User.Identity.Name, "\")(1)

            Dim sqlStr As String = String.Format("SELECT * FROM storeaccess WHERE uname='{0}';", username)
            Dim cmd As SqlCommand = New SqlCommand(sqlStr, connection)
            Dim reader As SqlDataReader = cmd.ExecuteReader()

            If reader.HasRows() Then
                While reader.Read()

                End While
            End If

        ElseIf permissionType = "Corporate" Then
            options.type = "Corp"

        End If

        Dim serializer As New JavaScriptSerializer(New SimpleTypeResolver())
        Return serializer.Serialize(options)
    End Function

End Class